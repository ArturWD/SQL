--FIRST
create or replace function emp_count(col_name varchar2, val varchar2)
return number is
    st VARCHAR2(2000);
    cont number(10, 2);
begin
    st := 'select count(*) from employees where '|| col_name ||' = :val';
    execute immediate st into cont using  val;
    return cont;
end emp_count;
--TEST
set serveroutput on;
begin
    dbms_output.put_line(emp_count('last_name', 'King'));
end;

select count(*) from employees where last_name = 'King';


--SECOND
create or replace procedure copy_table(table_name varchar2) is
    st varchar2(300);
begin
    st:= 'create table '||table_name||' as select * from employees';
    execute immediate st;
end copy_table;

--TEST
set serveroutput on;
begin
    copy_table('emp_copy');
end;

select count(*) from emp_copy where last_name = 'King';
drop table emp_copy;

--THIRD
create or replace procedure trunc_table(table_name varchar2) is
begin
    execute immediate 'truncate table '||table_name;
end trunc_table;
--TEST
begin
    copy_table('emp_copy');
    trunc_table('emp_copy');
end;
drop table emp_copy;
/*
+----------------------------------------+----------------------------------------------+
|                Truncate                |                    Delete                    |
+----------------------------------------+----------------------------------------------+
| We can't Rollback after performing     | We can Rollback after delete.                |
| Truncate.                              |                                              |
|                                        |                                              |
| Example:                               | Example:                                     |
| BEGIN TRAN                             | BEGIN TRAN                                   |
| TRUNCATE TABLE tranTest                | DELETE FROM tranTest                         |
| SELECT * FROM tranTest                 | SELECT * FROM tranTest                       |
| ROLLBACK                               | ROLLBACK                                     |
| SELECT * FROM tranTest                 | SELECT * FROM tranTest                       |
+----------------------------------------+----------------------------------------------+
| Truncate reset identity of table.      | Delete does not reset identity of table.     |
+----------------------------------------+----------------------------------------------+
| It locks the entire table.             | It locks the table row.                      |
+----------------------------------------+----------------------------------------------+
| Its DDL(Data Definition Language)      | Its DML(Data Manipulation Language)          |
| command.                               | command.                                     |
+----------------------------------------+----------------------------------------------+
| We can't use WHERE clause with it.     | We can use WHERE to filter data to delete.   |
+----------------------------------------+----------------------------------------------+
| Trigger is not fired while truncate.   | Trigger is fired.                            |
+----------------------------------------+----------------------------------------------+
| Syntax :                               | Syntax :                                     |
| 1) TRUNCATE TABLE table_name           | 1) DELETE FROM table_name                    |
|                                        | 2) DELETE FROM table_name WHERE              |
|                                        |    example_column_id IN (1,2,3)              |
+----------------------------------------+----------------------------------------------+

*/